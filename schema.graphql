type AaveProxy_LiquidationCall {
  id: ID!
  chainId: Int!
  timestamp: BigInt!
  collateralAsset: String!
  debtAsset: String!
  user: String!
  debtToCover: BigInt!
  liquidatedCollateralAmount: BigInt!
  liquidator: String!
  receiveAToken: Boolean!
}

type EulerFactory_ProxyCreated {
  id: ID!
  chainId: Int!
  timestamp: BigInt!
  proxy: String!
  upgradeable: Boolean!
  implementation: String!
  trailingData: String!
}

type EulerVaultProxy_Liquidate {
  id: ID!
  chainId: Int!
  timestamp: BigInt!
  liquidator: String!
  violator: String!
  collateral: String!
  repayAssets: BigInt!
  yieldBalance: BigInt!
}
